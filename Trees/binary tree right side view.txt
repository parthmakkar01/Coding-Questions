/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void cal(TreeNode * root , vector<int> &v)
    {
        queue<TreeNode *> q;
        q.push(root);
        q.push(NULL);
     //   v.push_back(root->val);
        
        while(1)
        {
            
            TreeNode * p=q.front(); q.pop();
            if(p==NULL)
            {
                q.push(NULL);
                if(q.front()==NULL)
                    break;
                
                    
                
            }
            else
            {
                if(p->left!=NULL)
                    q.push(p->left);
                if(p->right!=NULL)
                    q.push(p->right);
            
                if(q.front()==NULL)
                          v.push_back(p->val);
            
            }
            
        }
            
        
        
    }
    
    vector<int> rightSideView(TreeNode* root) {
     
        if(root==NULL)
            return {};
        
        vector<int > v;
         cal(root, v);
            return v;
    }
};